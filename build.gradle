
apply plugin: 'java-library'

// Blocking issue:https://github.com/reportportal/gradle-scripts/issues/37
//apply from: "${project.scripts_url}/${project.scripts_branch}/release-commons.gradle"
//apply from: "${project.scripts_url}/${project.scripts_branch}/build-quality.gradle"
//apply from: "${project.scripts_url}/${project.scripts_branch}/signing.gradle"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    api "com.epam.reportportal:client-java:${project.reportportal_client_java_version}"
    api "com.epam.reportportal:logger-java-logback:${project.reportportal_logback_version}"
    api "com.intuit.karate:karate-core:${project.karate_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${project.junit_version}"
    testImplementation "org.mockito:mockito-core:${project.mockito_version}"
    testImplementation "org.mockito:mockito-junit-jupiter:${project.mockito_version}"
    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    testCompileOnly "org.projectlombok:lombok:${project.lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${project.lombok_version}"

}

tasks.withType(Test) {
    jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
                '--add-opens', 'java.base/java.util=ALL-UNNAMED',
                '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED']
}

test {
    outputs.upToDateWhen { return false }
    maxParallelForks(5)
    useJUnitPlatform()
    doFirst {
        def weaver = configurations.testRuntimeClasspath.find { it.name.contains("aspectjweaver") }
        jvmArgs += "-javaagent:$weaver"
    }
    environment "AGENT_NO_ANALYTICS", "1"
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

wrapper {
    gradleVersion = "${project.gradle_version}"
}

processResources {
    filesMatching('agent.properties') {
        expand(project.properties)
    }
}

